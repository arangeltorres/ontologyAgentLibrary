{
  "list_schema": {
    "sql": "SELECT table_schema, table_name, column_name, data_type, is_nullable, col_description((quote_ident(table_schema)||'.'||quote_ident(table_name))::regclass::oid, ordinal_position) AS comment FROM information_schema.columns WHERE 1=1 {schema_filter} {table_filter} ORDER BY table_schema, table_name, ordinal_position",
    "description": "List database schema information"
  },
  "update_table_comment": {
    "sql": "COMMENT ON TABLE {table_name} IS '{comment}'",
    "description": "Update table comment"
  },
  "update_column_comment": {
    "sql": "COMMENT ON COLUMN {table_name}.{column_name} IS '{comment}'",
    "description": "Update column comment"
  },
  "get_foreign_keys": {
    "sql": "SELECT tc.table_schema, tc.table_name, kcu.column_name, ccu.table_schema AS fk_table_schema, ccu.table_name AS fk_table_name, ccu.column_name AS fk_column_name FROM information_schema.table_constraints tc JOIN information_schema.key_column_usage kcu ON tc.constraint_name=kcu.constraint_name AND tc.table_schema=kcu.table_schema JOIN information_schema.referential_constraints rc ON tc.constraint_name=rc.constraint_name AND tc.table_schema=rc.constraint_schema JOIN information_schema.constraint_column_usage ccu ON rc.unique_constraint_name=ccu.constraint_name AND rc.unique_constraint_schema=ccu.constraint_schema WHERE tc.constraint_type='FOREIGN KEY' {schema_filter}",
    "description": "Get foreign key relationships"
  },
  "list_tables": {
    "sql": "SELECT table_schema, table_name, table_type FROM information_schema.tables WHERE table_schema NOT IN ('information_schema', 'pg_catalog') {schema_filter} ORDER BY table_schema, table_name",
    "description": "List all tables"
  },
  "describe_table": {
    "sql": "SELECT column_name, data_type, is_nullable, column_default FROM information_schema.columns WHERE table_name = '{table_name}' {schema_filter} ORDER BY ordinal_position",
    "description": "Describe table structure"
  }
}
